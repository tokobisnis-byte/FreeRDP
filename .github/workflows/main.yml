name: RDP Always-On

on:
  workflow_dispatch:
  schedule:
    # Auto-renew setiap 5 jam (GitHub limit 6 jam)
    - cron: '0 */5 * * *'

concurrency:
  group: rdp-always
  cancel-in-progress: false

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 355  # ~5 jam 55 menit, aman dari auto-timeout GitHub

    steps:
      - name: Configure Core RDP Settings
        shell: powershell
        run: |
          # Enable Remote Desktop dan nonaktifkan NLA
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # Firewall rules
          netsh advfirewall firewall delete rule name="RDP-Tailscale" 2>$null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force
          Write-Host "‚úÖ RDP service enabled and firewall configured."

      - name: Create RDP User with Secure Password
        shell: powershell
        run: |
          Add-Type -AssemblyName System.Security
          $charSet = @{
              Upper   = [char[]](65..90)
              Lower   = [char[]](97..122)
              Number  = [char[]](48..57)
              Special = ([char[]](33..47) + [char[]](58..64) +
                         [char[]](91..96) + [char[]](123..126))
          }
          $rawPassword = @()
          $rawPassword += $charSet.Upper | Get-Random -Count 4
          $rawPassword += $charSet.Lower | Get-Random -Count 4
          $rawPassword += $charSet.Number | Get-Random -Count 4
          $rawPassword += $charSet.Special | Get-Random -Count 4
          $password = -join ($rawPassword | Sort-Object { Get-Random })
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue) {
              Remove-LocalUser -Name "RDP"
          }

          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"

          echo "RDP_USER=RDP" >> $env:GITHUB_ENV
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV
          Write-Host "‚úÖ Created user RDP | Password: $password"

      - name: Install Tailscale
        shell: powershell
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installer = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installer`"", "/quiet", "/norestart" -Wait
          Remove-Item $installer -Force
          Write-Host "‚úÖ Tailscale installed."

      - name: Connect to Tailscale
        shell: powershell
        env:
          TS_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $hostname = "gh-rdp-$env:GITHUB_RUN_ID"
          & "C:\Program Files\Tailscale\tailscale.exe" up --authkey $env:TS_KEY --hostname $hostname
          Start-Sleep -Seconds 5
          $tsip = & "C:\Program Files\Tailscale\tailscale.exe" ip -4 | Select-Object -First 1
          if (-not $tsip) { Write-Error "‚ùå Tailscale IP not assigned."; exit 1 }
          echo "TS_IP=$tsip" >> $env:GITHUB_ENV
          Write-Host "‚úÖ Connected to Tailscale IP: $tsip"

      - name: Verify RDP Connection
        shell: powershell
        run: |
          $test = Test-NetConnection -ComputerName $env:TS_IP -Port 3389
          if (-not $test.TcpTestSucceeded) { Write-Error "‚ùå RDP port unreachable"; exit 1 }
          Write-Host "‚úÖ RDP port 3389 is open and reachable."

      - name: Maintain Connection (Always-On)
        shell: powershell
        run: |
          Write-Host "`n===== RDP SESSION ACTIVE ====="
          Write-Host "Tailscale IP : $env:TS_IP"
          Write-Host "Username     : $env:RDP_USER"
          Write-Host "Password     : $env:RDP_PASSWORD"
          Write-Host "==============================`n"

          # Loop sampai workflow dihentikan manual / timeout GitHub
          for ($i = 1; $i -le 354; $i++) {
              Write-Host "[$(Get-Date -Format 'HH:mm:ss')] üü¢ RDP alive - auto-renew enabled ($i/354 min)"
              Start-Sleep -Seconds 60
          }

          Write-Host "‚öôÔ∏è Session will renew via cron shortly."
